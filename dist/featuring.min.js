/*! featuring v0.1.0 | (C) 2017 Alasdair Mercer, !ninja | MIT License */
!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define("featuring",e):n.featuring=e()}(this,function(){"use strict";function n(n,e){this._name=n,this._scope=e}function e(e,t){return new n(e,t)}function t(n,e){return function(){if(1===n.length)return n(e);var t=arguments[0],i=Array.prototype.slice.call(arguments,1);return n.apply(null,[t,e].concat(i))}}function i(n,e,i,r){i.forEach(function(i){e[i]=t(n[i],r)})}function r(n){c(n)&&(n=[n]);var e={};return n.forEach(function(n){e[n]=!0}),e}function o(n){return c(n)?f[n]:y}function u(n){var e=[];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&e.push(t);return e}function a(n){return"function"==typeof n}function c(n){return"string"==typeof n}var f={},y=null;return n.prototype={constructor:n,active:function(){var n=o(this._scope);return Boolean(n&&n[this._name])},using:function(e){return new n(this._name,e)},verify:function(){var n,e;if(!this.active())throw n='"'+this._name+'"',e=c(this._scope)?'"'+this._scope+'"':"global",new Error(n+" feature in "+e+" scope is not active");return this},when:function(n){return this.active()&&n(),this}},e.active=function(e,t){return c(e)&&(e=[e]),e.every(function(e){return new n(e,t).active()})},e.active.any=function(e,t){return c(e)&&(e=[e]),e.some(function(e){return new n(e,t).active()})},e.anyActive=e.active.any,e.get=function(n){var e=o(n);return e?u(e):[]},e.init=function(n,t){if(c(t)){if(f[t])throw new Error('"'+t+'" scope features have already been initialized');f[t]=r(n)}else{if(y)throw new Error("Global features have already been initialized");y=r(n)}return e},e.initialized=function(n){return null!=o(n)},e.using=function(n){var r=t(e,n);return i(e,r,["active","anyActive","get","init","initialized","verify","verifyAny","when","whenAny"],n),r.active.any=r.anyActive,r.using=e.using,r.verify.any=r.verifyAny,r.when.any=r.whenAny,r},e.verify=function(t,i){return c(t)&&(t=[t]),t.forEach(function(e){new n(e,i).verify()}),e},e.verify.any=function(n,t){if(e.active.any(n,t))return e;var i=c(t)?'"'+t+'"':"global";throw new Error("No named features in "+i+" scope are active")},e.verifyAny=e.verify.any,e.when=function(n,t,i){return a(t)&&(i=t,t=null),e.active(n,t)&&i(),e},e.when.any=function(n,t,i){return a(t)&&(i=t,t=null),e.active.any(n,t)&&i(),e},e.whenAny=e.when.any,e});

//# sourceMappingURL=featuring.min.js.map